For first installing MongoDB :

1) create folder c->data->db //
2)--> cd mongodb file path with bin paste here
3) mongo  //---->> open anothor cmd go to (cd mongodb/--/bin ) and run mongo this command in that cmd
4) use ---cls to clear
5)  show dbs ----> to view database avilable
----------------------------------------------------------------------------------------------------------------
if u have data folder in d drive

mongod --dbpath d:\\data

-------------------------------------------------------------------------------------- by default mongod runs on port --------> 27017

AFTER STARTING mongoDB ----->>> below commands 

show dbs   //--->> shows the databses

db 

use wiprocc  //--->>> use keyword will create the database name menctioned

db        //--->> IT SHOWS WHICH DATABASE WE ARE USING

show dbs  //--->> show all the databases avilable which has atleast one collection(empty db it wont show)

db.createCollection("employees");  //------->> to create collection in database(COLLECTION = TABLE IN SQL)

show dbs

show collections   // SHOW ALL THE COLLECTIONS 

db.employees.drop();   //-->>> DELETE THE COLLECTION

show collections

db.author.insert(     //---->>Insert data in the collections
{
"name":"john",
"yob":1999
}
);


db.author.find();    //---->> find the data in the collections


db.author.find().pretty();    ///--->> pretty is used to organise the data



db.author.insert(        //-->> inserting  data WITH 2 values 
{
"name":"rock",
"yob":1990
}
);



db.author.insert(       //-->> inserting  data WITH 3 values     // ITS NOT A PROBLEM WE CAN INSERT VALUES OF ANY NO OF VALUES IN SAME COLLECTION
{
"name":"brock",
"yob":1990,
"city":"bangalore"
}
);


select * from author where yob =1999   //----->>> THIS IS MY SQL FINDING OF DATA

db.author.find(       //----->>> THIS IS MONGOdb FINDING OF DATA
{
"yob":1999     //---->>> PARAMETER IS GIVEN TO FIND
}
).pretty();


db.author.insert(
{
"name":"hbk",
"yob":1988,
"city":"new york",
"phone":[99887788,88775544]   //---->>> ARRAY OF ELEMEMTS ARE ADDED INTO THE VARIABLE IS ALSO POSSIBLE
}
);


db.author.find(
{
"yob":{$gt:1990}      //---------------->>> yob which is greater than 1990 is retrived  (gt means greaterthan )
"yob":{$lt:1990}      //--------------->>>> lt means (Less than is retrived from the mongo data base)
}
).pretty(); //---->>> data will be in organised format

------------------------- greater than or equal to ---------------------------------------------

db.auhtor.find(
{
"yob":{$gte:1990}        //-------->> gte means (graeter than or equals to)
}
).pretty();

------------------------- not equals to (ne) ---------------------------------------------------

db.author.find(
{
"yob":{$ne:1990}       //----------------->>> ne means (not equals to)--->> except 1990 all years data is retrived 
}
).pretty();
----------------------- in ------------------------------------------------------------
db.author.find(
{
"yob":{$in:1990,1999} //----->> yob of 1990 and 1999 is only retrived !
}
).pretty();

-------------------------------------------- nin  (not-in) ------------------------------

db.author.find(
{
"yob":{$nin:1990,1999} //------->> except this two years all years are retrived 
}
).pretty();

---------------------------------------- and operator -------------------------------------

db.auhtor.find(
{
"yob":1999,
"city":"Banglore"       //---------->>> no need of yob and city  operator it will retrive the data by checking the two data parameters 
}
).pretty();

-------------------------------------------------------- or condition on mongo db ------------------

db.author.find(
$or:[
{"yob":1990},
{"city":"Banglore"}  //--------------------->>> data with   "1990"   or   "banglore" are retrived
]
).pretty();
