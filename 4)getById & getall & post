---------------------------------------------------------------------------------------------------------- controller
package com.example.SpringCCh2DBCRUD.Controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.SpringCCh2DBCRUD.Service.AuthorService;
import com.example.SpringCCh2DBCRUD.model.Author;

@RestController
@RequestMapping("authors")
public class AuthorController {
	
	@Autowired
	AuthorService authorService;
	
	@PostMapping
	public ResponseEntity<Author>saveAuthor(@RequestBody Author author)  //---->> this author is given to databaes to store 
	{
		Author saveAuthor=authorService.saveAuthor(author);
		  return new ResponseEntity<Author>(saveAuthor,HttpStatus.CREATED);
	}
	
	@GetMapping
	public ResponseEntity<List<Author>> getauthors(){      //------------>>> list of authors are fetched
		List<Author> authors = authorService.getAllAuthors();
		return new ResponseEntity<List<Author>>(authors,HttpStatus.FOUND);
		
	}
	
	@GetMapping("idno/{id}")     //---------->> author with id no is obtained
	public ResponseEntity<Author> getauthorbyId(@PathVariable int id){
		Author author = authorService.getAuthorById(id);
		return new ResponseEntity<Author>(author,HttpStatus.FOUND);
		
	}
}


---------------------------------------------------------------------------------------------------------- dao
package com.example.SpringCCh2DBCRUD.dao;

import org.springframework.data.repository.CrudRepository;
import org.springframework.stereotype.Repository;

import com.example.SpringCCh2DBCRUD.model.Author;

@Repository
public interface AuthorDao extends CrudRepository<Author,Integer>{  
	
	//CrudRepository is an interface it contains methods which do CRUD operations that is why we inherit them

}

---------------------------------------------------------------------------------------------------------- service
package com.example.SpringCCh2DBCRUD.Service;

import java.util.List;

import org.springframework.stereotype.Service;

import com.example.SpringCCh2DBCRUD.model.Author;

@Service        //THIS SERVICE IS ONLY VISIBLE TO THE CLIENT
public interface AuthorService {
	
	public Author saveAuthor(Author author); //HERE THE INSTANCE IS CREATED FOR THE AUTHOR
	
	public List<Author> getAllAuthors();   //---->>> to get all others in the list we use list
	
	public Author getAuthorById(int authorId);
	

}

---------------------------------------------------------------------------------------------------------- implservice
package com.example.SpringCCh2DBCRUD.Service;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.SpringCCh2DBCRUD.dao.AuthorDao;
import com.example.SpringCCh2DBCRUD.model.Author;



@Service     //THIS SERVICE IS NOT VISIBLE TO CLIENT (IN THIS SERVICE ACTUAL IMPLEMENTATION LOGIC IS THERE CLIENT NOT NEED THAT LOGIC AND ALL)
public class Authorimpl implements AuthorService {

	@Autowired
	AuthorDao authorDao;

	@Override
	public Author saveAuthor(Author author) {
		String name = nameGenerator(author.getAuthorName());   //ACTUAL BODY IS WRITTEN IN THIS METHOD
		author.setAuthorName(name);
		return authorDao.save(author);  //AUTHOR NAME IS CAPITALIZED
	}
	
	public String nameGenerator(String name) {
		return name.toUpperCase();        // ACTUAL LOGIC IS HERE
	}
	
	
	
	
	//---------------- getallauthors method -----------------------
	@Override
	public List<Author> getAllAuthors(){
		return (List<Author>) authorDao.findAll();
		
	}
	
	@Override
	public Author getAuthorById(int authorId) {
		
		return authorDao.findById(authorId).get();
		
	}
	
}
---------------------------------------------------------------------------------------------------------- author.model
package com.example.SpringCCh2DBCRUD.model;

import javax.persistence.Entity;
import javax.persistence.Id;

@Entity
public class Author {
	private String authorName;
	@Id //primary key
	private int authorId;
	private String book;
	
	public String getAuthorName() {
		return authorName;
	}
	public void setAuthorName(String authorName) {
		this.authorName = authorName;
	}
	public int getAuthorId() {
		return authorId;
	}
	public void setAuthorId(int authorId) {
		this.authorId = authorId;
	}
	public String getBook() {
		return book;
	}
	public void setBook(String book) {
		this.book = book;
	}
	public Author(String authorName, int authorId, String book) {
		super();
		this.authorName = authorName;
		this.authorId = authorId;
		this.book = book;
	}
	public Author() {
		super();
		// TODO Auto-generated constructor stub
	}
	@Override
	public String toString() {
		return "Author [authorName=" + authorName + ", authorId=" + authorId + ", book=" + book + "]";
	}
}


